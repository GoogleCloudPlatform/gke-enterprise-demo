# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Rules for go library, image and container
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

# Rules for k8s
load("@k8s_deploy//:defaults.bzl", "k8s_deploy",)
load("@k8s_service//:defaults.bzl", "k8s_service",)
load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

# Build pyrios-ui
go_binary(
    name = "pyrios-ui",
    embed = [":go_default_library"],
)

# Dependencies for pyrios-ui
go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/GoogleCloudPlatform/gke-enterprise-demo/pyrios-ui",
    deps = [
        "@com_github_tidwall_gjson//:go_default_library",
        "@com_google_cloud_go//compute/metadata:go_default_library",
        "@com_google_cloud_go//monitoring/apiv3:go_default_library",
        "@go_googleapis//google/api:metric_go_proto",
        "@go_googleapis//google/api:monitoredres_go_proto",
        "@go_googleapis//google/monitoring/v3:monitoring_go_proto",
        "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
        "@io_opencensus_go//trace:go_default_library",
        "@io_opencensus_go_contrib_exporter_stackdriver//:go_default_library",
    ],
)

# Rules for pyrios-ui container
go_image(
    name = "go_image_base",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
)

# Rules for pyrios-ui image
container_image(
    name = "app_image",
    base = ":go_image_base",
    ports = ["9200"],
    files = ["static"],
    directory = "/app",
    workdir = "/app",
)

# Rules for k8s pyrios UI deployment
k8s_deploy(
    name = "pyrios-ui-deployment",
    cluster = "$(cluster)",
    context = "$(cluster)",
    image_chroot = "$(repo)",
    images = {
        "pyrios-ui:do_not_delete": ":app_image",
    },
    template = "//pyrios-ui/manifest-templates:deployment.yaml",
)

# K8s objects for pyrios ui
k8s_objects(
    name = "k8s",
    objects = [
        ":pyrios-ui-deployment",
    ],
)
